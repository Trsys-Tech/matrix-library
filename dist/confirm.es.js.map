{"version":3,"file":"confirm.es.js","sources":["../src/components/confirm/Confirm.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useCallback, useEffect } from \"react\";\r\nimport { Modal, ModalFooter } from \"../modal/Modal\";\r\nimport { Button } from \"../button/Button\";\r\nimport { cn } from \"../../lib/utils\";\r\n\r\nlet confirmId = 0;\r\n\r\ntype ConfirmOptions = {\r\n  title: string;\r\n  description: string;\r\n  confirmationText?: string;\r\n  cancelationText?: string;\r\n  modalProps?: React.ComponentProps<typeof Modal>;\r\n  hideCancelButton?: boolean;\r\n  buttonOrder?: (\"confirm\" | \"cancel\")[];\r\n  confirmButtonProps?: React.ComponentProps<typeof Button>;\r\n  cancelButtonProps?: React.ComponentProps<typeof Button>;\r\n  descriptionProps?: React.ComponentProps<\"p\">;\r\n};\r\ntype ConfirmState = { resolve: (value: unknown) => void; reject: (reason?: any) => void; parentId: ParentId } | null;\r\ntype ParentId = string;\r\n\r\ntype ConfirmContext = {\r\n  confirmBase: (parentId: ParentId, options: ConfirmOptions) => Promise<unknown>;\r\n  closeOnParentUnmount: (parentId: ParentId) => void;\r\n} | null;\r\nconst ConfirmContext = React.createContext<ConfirmContext>(null);\r\n\r\n/**\r\n * ConfirmProvider\r\n */\r\ntype ConfirmProviderProps = {\r\n  children: React.ReactNode;\r\n};\r\nconst ConfirmProvider: React.FC<ConfirmProviderProps> = ({ children }) => {\r\n  const [state, setState] = React.useState<ConfirmState>(null);\r\n  const [options, setOptions] = React.useState<ConfirmOptions>({\r\n    buttonOrder: [\"cancel\", \"confirm\"],\r\n    description: \"\",\r\n    title: \"Are you sure?\",\r\n  });\r\n  const [key, setKey] = React.useState(0);\r\n\r\n  const confirmBase = useCallback((parentId: ParentId, options: ConfirmOptions) => {\r\n    return new Promise((resolve, reject) => {\r\n      setKey(key => key + 1);\r\n      setOptions(options);\r\n      setState({ resolve, reject, parentId });\r\n    });\r\n  }, []);\r\n\r\n  const closeOnParentUnmount = useCallback((parentId: ParentId) => {\r\n    setState(state => {\r\n      if (state?.parentId === parentId) {\r\n        return null;\r\n      } else {\r\n        return state;\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const handleClose = useCallback(() => {\r\n    setState(state => {\r\n      state?.reject();\r\n      return null;\r\n    });\r\n  }, []);\r\n\r\n  const handleConfirm = useCallback(() => {\r\n    setState(state => {\r\n      state?.resolve(null);\r\n      return null;\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <ConfirmContext.Provider value={{ confirmBase, closeOnParentUnmount }}>\r\n      {children}\r\n      <ConfirmModal key={key} open={state !== null} options={options} onCancel={handleClose} onConfirm={handleConfirm} />\r\n    </ConfirmContext.Provider>\r\n  );\r\n};\r\n\r\nconst useConfirmId = () => {\r\n  const id = React.useMemo(() => {\r\n    return confirmId++;\r\n  }, []);\r\n\r\n  return `confirm-${id}`;\r\n};\r\n\r\nconst useConfirm = () => {\r\n  const parentId = useConfirmId();\r\n  const context = React.useContext(ConfirmContext);\r\n  if (!context) {\r\n    throw new Error(\"useConfirm must be used within a ConfirmProvider\");\r\n  }\r\n\r\n  const { confirmBase, closeOnParentUnmount } = context;\r\n\r\n  const confirm = useCallback(\r\n    (options: ConfirmOptions) => {\r\n      return confirmBase(parentId, options);\r\n    },\r\n    [parentId, confirmBase],\r\n  );\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      closeOnParentUnmount(parentId);\r\n    };\r\n  }, [parentId, closeOnParentUnmount]);\r\n\r\n  return confirm;\r\n};\r\n\r\ntype ConfirmModalProps = {\r\n  open: boolean;\r\n  onCancel?: () => void;\r\n  onConfirm: () => void;\r\n  options: ConfirmOptions;\r\n};\r\n\r\nconst ConfirmModal: React.FC<ConfirmModalProps> = ({ onConfirm, open, options, onCancel }) => {\r\n  const {\r\n    buttonOrder = [\"cancel\", \"confirm\"],\r\n    description,\r\n    title,\r\n    cancelationText,\r\n    confirmationText,\r\n    hideCancelButton,\r\n    modalProps,\r\n    cancelButtonProps,\r\n    confirmButtonProps,\r\n    descriptionProps,\r\n  } = options;\r\n\r\n  const actions = React.useMemo(\r\n    () =>\r\n      buttonOrder.map(action => {\r\n        const { className: confirmClassName, ...restConfirmButtonProps } = confirmButtonProps ?? {};\r\n        const { className: cancelClassName, ...restCancelButtonProps } = cancelButtonProps ?? {};\r\n        if (action === \"confirm\") {\r\n          return (\r\n            <Button key=\"confirm-button\" onClick={onConfirm} variant=\"primary\" className={cn(\"w-28\", confirmClassName)} {...restConfirmButtonProps}>\r\n              {confirmationText || \"Confirm\"}\r\n            </Button>\r\n          );\r\n        }\r\n        if (action === \"cancel\" && !hideCancelButton) {\r\n          return (\r\n            <Button key=\"cancel-button\" onClick={onCancel} variant=\"text\" className={cn(\"w-28\", cancelClassName)} {...restCancelButtonProps}>\r\n              {cancelationText || \"Cancel\"}\r\n            </Button>\r\n          );\r\n        }\r\n      }),\r\n    [hideCancelButton, buttonOrder, confirmationText, cancelationText, confirmButtonProps, cancelButtonProps, onConfirm, onCancel],\r\n  );\r\n\r\n  return (\r\n    <Modal open={open} onOpenChange={onCancel} title={title} role=\"alertdialog\" {...modalProps}>\r\n      <p {...descriptionProps}>{description}</p>\r\n      <ModalFooter>{actions}</ModalFooter>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport { ConfirmProvider, useConfirm };\r\n"],"names":["confirmId","ConfirmContext","React","ConfirmProvider","children","state","setState","options","setOptions","key","setKey","confirmBase","useCallback","parentId","resolve","reject","closeOnParentUnmount","handleClose","handleConfirm","jsxs","jsx","ConfirmModal","useConfirmId","useConfirm","context","confirm","useEffect","onConfirm","open","onCancel","buttonOrder","description","title","cancelationText","confirmationText","hideCancelButton","modalProps","cancelButtonProps","confirmButtonProps","descriptionProps","actions","action","confirmClassName","restConfirmButtonProps","cancelClassName","restCancelButtonProps","Button","cn","Modal","ModalFooter"],"mappings":"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"}