{"version":3,"file":"chip.es.js","sources":["../src/components/chip/Chip.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { Slot } from \"@radix-ui/react-slot\";\r\nimport { tv, VariantProps } from \"tailwind-variants\";\r\n\r\nimport { cn } from \"../../lib/utils\";\r\nimport { XMark } from \"@trsys-tech/matrix-icons\";\r\n\r\nconst chipVariants = tv({\r\n  base: \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-full text-xs font-medium\",\r\n  variants: {\r\n    variant: {\r\n      primary: \"bg-primary-100 text-primary-700 border border-primary\",\r\n      neutral: \"bg-gray-50 text-text-400 border border-gray-400\",\r\n      \"table-primary\": \"bg-primary-25 text-primary font-bold\",\r\n      \"table-neutral\": \"bg-gray-50 text-text-400 font-medium\",\r\n    },\r\n    size: {\r\n      sm: \"px-2 h-6\",\r\n      md: \"px-4 h-8\",\r\n      lg: \"px-6 h-10 text-sm\",\r\n    },\r\n  },\r\n  defaultVariants: {\r\n    variant: \"primary\",\r\n    size: \"md\",\r\n  },\r\n});\r\n\r\ninterface ChipProps extends React.ButtonHTMLAttributes<HTMLSpanElement>, VariantProps<typeof chipVariants> {\r\n  asChild?: boolean;\r\n  onClose?: () => void;\r\n}\r\n\r\nconst Chip = React.forwardRef<HTMLSpanElement, ChipProps>(({ className, variant, asChild = false, children, onClose, size, ...props }, ref) => {\r\n  const Comp = asChild ? Slot : \"span\";\r\n  return (\r\n    <Comp className={cn(chipVariants({ variant, size, className }))} ref={ref} {...props}>\r\n      {children}\r\n      {onClose ? (\r\n        <button\r\n          onClick={onClose}\r\n          className={cn(\r\n            { \"-me-3 [&>svg]:w-5 [&>svg]:h-5\": size === \"lg\" },\r\n            { \"-me-2 [&>svg]:w-4.5 [&>svg]:h-4.5\": size === \"md\" || size === undefined },\r\n            { \"-me-1 [&>svg]:w-4 [&>svg]:h-4\": size === \"sm\" },\r\n          )}\r\n        >\r\n          <XMark />\r\n        </button>\r\n      ) : null}\r\n    </Comp>\r\n  );\r\n});\r\nChip.displayName = \"Chip\";\r\n\r\nexport { Chip, type ChipProps };\r\n"],"names":["chipVariants","tv","Chip","React","className","variant","asChild","children","onClose","size","props","ref","jsxs","Slot","cn","jsx","XMark"],"mappings":";;;;;;AASA,MAAMA,IAAeC,EAAG;AAAA,EACtB,MAAM;AAAA,EACN,UAAU;AAAA,IACR,SAAS;AAAA,MACP,SAAS;AAAA,MACT,SAAS;AAAA,MACT,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,IAAA;AAAA,IAEnB,MAAM;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,IAAA;AAAA,EACN;AAAA,EAEF,iBAAiB;AAAA,IACf,SAAS;AAAA,IACT,MAAM;AAAA,EAAA;AAEV,CAAC,GAOKC,IAAOC,EAAM,WAAuC,CAAC,EAAE,WAAAC,GAAW,SAAAC,GAAS,SAAAC,IAAU,IAAO,UAAAC,GAAU,SAAAC,GAAS,MAAAC,GAAM,GAAGC,EAAA,GAASC,MAGnI,gBAAAC,EAFWN,IAAUO,IAAO,QAE3B,EAAK,WAAWC,EAAGd,EAAa,EAAE,SAAAK,GAAS,MAAAI,GAAM,WAAAL,EAAA,CAAW,CAAC,GAAG,KAAAO,GAAW,GAAGD,GAC5E,UAAA;AAAA,EAAAH;AAAA,EACAC,IACC,gBAAAO;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,SAASP;AAAA,MACT,WAAWM;AAAA,QACT,EAAE,iCAAiCL,MAAS,KAAA;AAAA,QAC5C,EAAE,qCAAqCA,MAAS,QAAQA,MAAS,OAAA;AAAA,QACjE,EAAE,iCAAiCA,MAAS,KAAA;AAAA,MAAK;AAAA,MAGnD,4BAACO,GAAA,CAAA,CAAM;AAAA,IAAA;AAAA,EAAA,IAEP;AAAA,GACN,CAEH;AACDd,EAAK,cAAc;"}