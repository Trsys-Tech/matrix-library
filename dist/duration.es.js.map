{"version":3,"file":"duration.es.js","sources":["../src/components/duration/Duration.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport * as React from \"react\";\r\nimport { tv, VariantProps } from \"tailwind-variants\";\r\n\r\nimport { cn } from \"../../lib/utils\";\r\n\r\nconst textFieldVariants = tv({\r\n  base: [\r\n    \"flex items-center w-full rounded-sm border border-input text-text bg-transparent p-0 text-xs [&_input]:text-xs font-medium transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground\",\r\n    \"placeholder:text-text-300 hover:border-primary-400 focus-within:border-primary-400 focus-within:outline-none focus-within:ring focus-within:ring-primary-100\",\r\n    \"aria-disabled:text-text-300 aria-disabled:bg-gray-100 aria-disabled:border-gray-100\",\r\n  ],\r\n  variants: {\r\n    size: {\r\n      sm: \"h-7\",\r\n      md: \"h-8\",\r\n      lg: \"h-11\",\r\n    },\r\n  },\r\n  defaultVariants: {\r\n    size: \"md\",\r\n  },\r\n});\r\n\r\ninterface DurationProps extends React.HTMLAttributes<HTMLDivElement>, VariantProps<typeof textFieldVariants> {\r\n  disabled?: boolean;\r\n  endAdornment?: React.ReactNode;\r\n  startAdornment?: React.ReactNode;\r\n  onChange?: React.ChangeEventHandler<HTMLInputElement>;\r\n  value?: string;\r\n  defaultValue?: string;\r\n  showSeconds?: boolean;\r\n  slotProps?: {\r\n    inputProps?: React.InputHTMLAttributes<HTMLInputElement>;\r\n  };\r\n}\r\n\r\nconst Duration = React.forwardRef<HTMLInputElement, DurationProps>(\r\n  (\r\n    { className, slotProps, endAdornment, startAdornment, size, value: _value, onChange, defaultValue, disabled, showSeconds = false, ...props },\r\n    ref,\r\n  ) => {\r\n    const getFormattedValue = React.useCallback(\r\n      (val: string) => {\r\n        const digits = val.replace(/\\D/g, \"\");\r\n        const maxLength = showSeconds ? 6 : 4;\r\n        const limitedDigits = digits.substring(0, maxLength).padEnd(maxLength, \"0\");\r\n\r\n        let hours = limitedDigits.substring(0, 2);\r\n        let minutes = limitedDigits.substring(2, 4);\r\n        let seconds = showSeconds ? limitedDigits.substring(4, 6) : \"\";\r\n\r\n        if (parseInt(hours, 10) > 23) hours = \"23\";\r\n        if (parseInt(minutes, 10) > 59) minutes = \"59\";\r\n        if (showSeconds && parseInt(seconds, 10) > 59) seconds = \"59\";\r\n\r\n        let formatted = hours;\r\n        if (maxLength >= 4) formatted += `:${minutes}`;\r\n        if (showSeconds) formatted += `:${seconds}`;\r\n\r\n        return formatted;\r\n      },\r\n      [showSeconds],\r\n    );\r\n\r\n    const [value, setValue] = React.useState(() => getFormattedValue(defaultValue || \"\"));\r\n    const inputRef = React.useRef<HTMLInputElement>(null);\r\n\r\n    React.useImperativeHandle(ref, () => inputRef.current as HTMLInputElement);\r\n\r\n    React.useEffect(() => {\r\n      if (_value !== undefined) {\r\n        setValue(getFormattedValue(_value));\r\n      }\r\n    }, [_value, getFormattedValue]);\r\n\r\n    const handleNumericInput = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n      e.preventDefault();\r\n      const input = e.currentTarget;\r\n      const { key } = e;\r\n      const selection = input.selectionStart ?? 0;\r\n      const nextValue = value.substring(0, selection) + key + value.substring(selection + 1);\r\n      const formatted = getFormattedValue(nextValue);\r\n      setValue(formatted);\r\n\r\n      if (onChange) {\r\n        const syntheticEvent = { ...e, target: { ...e.target, value: formatted } };\r\n        onChange(syntheticEvent as unknown as React.ChangeEvent<HTMLInputElement>);\r\n      }\r\n\r\n      requestAnimationFrame(() => {\r\n        let nextCursor = selection + 1;\r\n        if (formatted[nextCursor] === \":\") {\r\n          nextCursor++;\r\n        }\r\n        input.setSelectionRange(nextCursor, nextCursor);\r\n      });\r\n    };\r\n\r\n    const handleBackspace = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n      e.preventDefault();\r\n      const input = e.currentTarget;\r\n      const selection = input.selectionStart ?? 0;\r\n      if (selection === 0) return;\r\n\r\n      let nextValue = \"\";\r\n      let nextCursor = selection - 1;\r\n\r\n      if (value[selection - 1] === \":\") {\r\n        nextValue = `${value.substring(0, selection - 2)}0${value.substring(selection - 1)}`;\r\n        nextCursor = selection - 2;\r\n      } else {\r\n        const currentValue = value.replace(/\\D/g, \"\");\r\n        const cursorIndex = selection - Math.floor((selection - 1) / 3);\r\n        const nextDigits = `${currentValue.substring(0, cursorIndex - 1)}0${currentValue.substring(cursorIndex)}`;\r\n        nextValue = getFormattedValue(nextDigits);\r\n      }\r\n\r\n      const formatted = getFormattedValue(nextValue);\r\n      setValue(formatted);\r\n\r\n      if (onChange) {\r\n        const syntheticEvent = { ...e, target: { ...e.target, value: formatted } };\r\n        onChange(syntheticEvent as unknown as React.ChangeEvent<HTMLInputElement>);\r\n      }\r\n\r\n      requestAnimationFrame(() => {\r\n        input.setSelectionRange(nextCursor, nextCursor);\r\n      });\r\n    };\r\n\r\n    const handleArrowKey = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n      e.preventDefault();\r\n      const input = e.currentTarget;\r\n      const { key } = e;\r\n      const increment = key === \"ArrowUp\" ? 1 : -1;\r\n      const parts = value.split(\":\").map(Number);\r\n      const selection = input.selectionStart ?? 0;\r\n\r\n      if (selection <= 2) {\r\n        // Hours\r\n        parts[0] = (parts[0] + increment + 24) % 24;\r\n      } else if (selection >= 3 && selection <= 5) {\r\n        // Minutes\r\n        const newMinutes = parts[1] + increment;\r\n        if (newMinutes >= 60) {\r\n          parts[0] = (parts[0] + 1) % 24;\r\n          parts[1] = newMinutes % 60;\r\n        } else if (newMinutes < 0) {\r\n          parts[0] = (parts[0] - 1 + 24) % 24;\r\n          parts[1] = 59;\r\n        } else {\r\n          parts[1] = newMinutes;\r\n        }\r\n      } else if (showSeconds && selection >= 6) {\r\n        // Seconds\r\n        const newSeconds = parts[2] + increment;\r\n        if (newSeconds >= 60) {\r\n          parts[1] += 1;\r\n          parts[2] = newSeconds % 60;\r\n        } else if (newSeconds < 0) {\r\n          parts[1] -= 1;\r\n          parts[2] = 59;\r\n        } else {\r\n          parts[2] = newSeconds;\r\n        }\r\n\r\n        if (parts[1] >= 60) {\r\n          parts[0] = (parts[0] + 1) % 24;\r\n          parts[1] %= 60;\r\n        } else if (parts[1] < 0) {\r\n          parts[0] = (parts[0] - 1 + 24) % 24;\r\n          parts[1] = 59;\r\n        }\r\n      }\r\n\r\n      const newValue = parts.map(part => String(part).padStart(2, \"0\")).join(\":\");\r\n      setValue(newValue);\r\n      if (onChange) {\r\n        onChange({ target: { value: newValue } } as React.ChangeEvent<HTMLInputElement>);\r\n      }\r\n      requestAnimationFrame(() => {\r\n        input.setSelectionRange(selection, selection);\r\n      });\r\n    };\r\n\r\n    const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n      const { key, currentTarget } = e;\r\n      const { selectionStart, selectionEnd } = currentTarget;\r\n\r\n      if (key.length === 1 && /\\d/.test(key)) {\r\n        handleNumericInput(e);\r\n      } else if (key === \"Backspace\") {\r\n        handleBackspace(e);\r\n      } else if (key === \"ArrowUp\" || key === \"ArrowDown\") {\r\n        handleArrowKey(e);\r\n      } else if (key === \"ArrowRight\" || key === \"ArrowLeft\" || key.length > 1 || selectionStart !== selectionEnd) {\r\n        // Allow navigation, control keys, and replacing a selection\r\n      } else {\r\n        e.preventDefault();\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div {...props} className={cn(textFieldVariants({ size, className }))} aria-disabled={disabled}>\r\n        {startAdornment}\r\n        <input\r\n          type=\"text\"\r\n          inputMode=\"numeric\"\r\n          ref={inputRef}\r\n          onKeyDown={handleKeyDown}\r\n          onChange={() => {}}\r\n          value={value}\r\n          placeholder={showSeconds ? \"HH:MM:SS\" : \"HH:MM\"}\r\n          disabled={disabled}\r\n          {...(slotProps?.inputProps ?? {})}\r\n          className={cn(\r\n            \"focus:outline-none w-full h-full py-1 rounded-sm file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-text-300\",\r\n            !startAdornment ? \"px-3\" : \"ps-1 pe-3\",\r\n            slotProps?.inputProps?.className,\r\n          )}\r\n        />\r\n\r\n        {endAdornment}\r\n      </div>\r\n    );\r\n  },\r\n);\r\nDuration.displayName = \"Duration\";\r\n\r\nexport { Duration, type DurationProps };\r\n"],"names":["textFieldVariants","tv","Duration","React","className","slotProps","endAdornment","startAdornment","size","_value","onChange","defaultValue","disabled","showSeconds","props","ref","getFormattedValue","val","digits","maxLength","limitedDigits","hours","minutes","seconds","formatted","value","setValue","inputRef","handleNumericInput","input","key","selection","nextValue","syntheticEvent","nextCursor","handleBackspace","currentValue","cursorIndex","nextDigits","handleArrowKey","increment","parts","newMinutes","newSeconds","newValue","part","handleKeyDown","currentTarget","selectionStart","selectionEnd","jsxs","cn","jsx"],"mappings":"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"}