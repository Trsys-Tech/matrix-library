{"version":3,"file":"select.es.js","sources":["../src/components/select/Select.tsx"],"sourcesContent":["\"use client\";\n\nimport * as React from \"react\";\nimport { Check, ChevronDown, ChevronUp, XMark } from \"@trsys-tech/matrix-icons\";\nimport * as SelectPrimitive from \"@radix-ui/react-select\";\nimport type { SelectValueProps, SelectGroupProps } from \"@radix-ui/react-select\";\n\nimport { cn } from \"../../lib/utils\";\n\ntype ClearSelectContextValue = {\n  onClear: () => void;\n  value: string | undefined;\n};\n\nconst SelectContext = React.createContext<ClearSelectContextValue>({ onClear: () => {}, value: undefined });\n\nconst Select = ({ onValueChange, value, ...props }: SelectPrimitive.SelectProps) => {\n  const onClear = () => {\n    onValueChange?.(\"\");\n  };\n\n  return (\n    <SelectContext.Provider value={{ onClear, value }}>\n      <SelectPrimitive.Root {...props} value={value} onValueChange={onValueChange} />\n    </SelectContext.Provider>\n  );\n};\nSelect.displayName = SelectPrimitive.Root.displayName;\ntype SelectProps = React.ComponentProps<typeof Select>;\n\nconst SelectGroup = SelectPrimitive.Group;\n\nconst SelectValue = SelectPrimitive.Value;\n\ntype SelectTriggerProps = React.ComponentProps<typeof SelectPrimitive.Trigger> & {\n  clearable?: boolean;\n};\n\nconst SelectTrigger = React.forwardRef<React.ElementRef<typeof SelectPrimitive.Trigger>, SelectTriggerProps>(\n  ({ className, children, clearable, ...props }: SelectTriggerProps, ref) => {\n    const { onClear, value } = React.useContext(SelectContext);\n\n    const handlePointerDown = (e: React.PointerEvent) => {\n      e.stopPropagation();\n    };\n\n    return (\n      <SelectPrimitive.Trigger\n        ref={ref}\n        className={cn(\n          \"group flex h-8 w-full items-center justify-between whitespace-nowrap rounded-sm border border-input bg-transparent px-3 py-2 text-xs ring-offset-background data-[placeholder]:text-muted-foreground hover:border hover:border-primary focus:border focus:border-primary focus:outline-none focus:ring focus:ring-primary-100 disabled:cursor-not-allowed disabled:bg-gray-100 disabled:text-text-300 disabled:border-none [&>span]:line-clamp-1 [&_svg]:disabled:text-text-300\",\n          className,\n        )}\n        data-value={value}\n        {...props}\n      >\n        {children}\n        <div className=\"flex items-center gap-2\">\n          {clearable && value ? (\n            <SelectPrimitive.Icon asChild onPointerDown={handlePointerDown} onClickCapture={onClear}>\n              <XMark className=\"h-4.5 w-4.5\" />\n            </SelectPrimitive.Icon>\n          ) : null}\n          <SelectPrimitive.Icon asChild>\n            <ChevronDown className=\"h-4.5 w-4.5 text-primary group-data-[state=open]:rotate-180 transition-transform\" />\n          </SelectPrimitive.Icon>\n        </div>\n      </SelectPrimitive.Trigger>\n    );\n  },\n);\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName;\n// type SelectTriggerProps = React.ComponentProps<typeof SelectTrigger>;\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton ref={ref} className={cn(\"flex cursor-default items-center justify-center py-1\", className)} {...props}>\n    <ChevronUp />\n  </SelectPrimitive.ScrollUpButton>\n));\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName;\ntype SelectScrollUpButtonProps = React.ComponentProps<typeof SelectScrollUpButton>;\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton ref={ref} className={cn(\"flex cursor-default items-center justify-center py-1\", className)} {...props}>\n    <ChevronDown />\n  </SelectPrimitive.ScrollDownButton>\n));\nSelectScrollDownButton.displayName = SelectPrimitive.ScrollDownButton.displayName;\ntype SelectScrollDownButtonProps = React.ComponentProps<typeof SelectScrollDownButton>;\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1 max-h-[--radix-select-content-available-height]\",\n        className,\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\"p-1\", position === \"popper\" && \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\")}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n));\nSelectContent.displayName = SelectPrimitive.Content.displayName;\ntype SelectContentProps = React.ComponentProps<typeof SelectContent>;\n\nconst SelectLabel = React.forwardRef<React.ElementRef<typeof SelectPrimitive.Label>, React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>>(\n  ({ className, ...props }, ref) => <SelectPrimitive.Label ref={ref} className={cn(\"px-2 py-1.5 text-xs font-semibold\", className)} {...props} />,\n);\nSelectLabel.displayName = SelectPrimitive.Label.displayName;\ntype SelectLabelProps = React.ComponentProps<typeof SelectLabel>;\n\nconst SelectItem = React.forwardRef<React.ElementRef<typeof SelectPrimitive.Item>, React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>>(\n  ({ className, children, ...props }, ref) => (\n    <SelectPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-2 pr-8 text-xs outline-none focus:bg-gray-200 data-[active=true]:bg-gray-300 data-[active=true]:font-bold data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n        className,\n      )}\n      {...props}\n    >\n      <span className=\"absolute right-2 flex h-3.5 w-3.5 items-center justify-center\">\n        <SelectPrimitive.ItemIndicator>\n          <Check className=\"h-4 w-4\" />\n        </SelectPrimitive.ItemIndicator>\n      </span>\n      <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n    </SelectPrimitive.Item>\n  ),\n);\nSelectItem.displayName = SelectPrimitive.Item.displayName;\ntype SelectItemProps = React.ComponentProps<typeof SelectItem>;\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => <SelectPrimitive.Separator ref={ref} className={cn(\"-mx-1 my-1 h-px bg-muted\", className)} {...props} />);\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName;\ntype SelectSeparatorProps = React.ComponentProps<typeof SelectSeparator>;\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n  type SelectProps,\n  type SelectGroupProps,\n  type SelectValueProps,\n  type SelectTriggerProps,\n  type SelectContentProps,\n  type SelectLabelProps,\n  type SelectItemProps,\n  type SelectSeparatorProps,\n  type SelectScrollUpButtonProps,\n  type SelectScrollDownButtonProps,\n};\n"],"names":["SelectContext","React","Select","onValueChange","value","props","onClear","jsx","SelectPrimitive","SelectGroup","SelectValue","SelectTrigger","className","children","clearable","ref","handlePointerDown","e","jsxs","cn","XMark","ChevronDown","SelectScrollUpButton","ChevronUp","SelectScrollDownButton","SelectContent","position","SelectLabel","SelectItem","Check","SelectSeparator"],"mappings":"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"}