{"version":3,"file":"iconbutton.es.js","sources":["../src/components/icon-botton/IconButton.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { Slot, Slottable } from \"@radix-ui/react-slot\";\r\nimport { tv, VariantProps } from \"tailwind-variants\";\r\n\r\nimport { cn } from \"../../lib/utils\";\r\nimport { Spinner } from \"@trsys-tech/matrix-icons\";\r\n\r\nconst iconButtonVariants = tv({\r\n  base: \"inline-flex items-center justify-center gap-1 p-2 rounded-sm text-xs font-normal transition-colors focus-visible:outline-none disabled:pointer-events-none disabled:bg-muted disabled:text-gray-500\",\r\n  variants: {\r\n    variant: {\r\n      table: \"text-text hover:bg-primary-50 focus:bg-transparent focus:ring active:bg-primary-50 active:text-primary-700\",\r\n      toolbar: \"text-primary hover:bg-primary-50 focus:bg-transparent focus:ring active:bg-primary-50 active:text-primary-700\",\r\n      form: \"border border-gray-300 text-primary hover:border-none hover:bg-primary-50 focus:border-none focus:bg-transparent focus:ring active:border-none active:bg-primary-50 active:text-primary-700 disabled:border-none\",\r\n      danger: \"text-danger hover:bg-danger-200 focus:bg-transparent focus:ring focus:ring-danger-400 active:bg-danger-300\",\r\n      warning: \"text-warning hover:bg-warning-200 focus:bg-transparent focus:ring focus:ring-warning-400 active:bg-warning-300\",\r\n      success: \"text-success hover:bg-success-200 focus:bg-transparent focus:ring focus:ring-success-400 active:bg-success-300\",\r\n      info: \"text-info hover:bg-info-200 focus:bg-transparent focus:ring focus:ring-info-400 active:bg-info-300\",\r\n    },\r\n    size: {\r\n      md: \"h-8 w-8.5\",\r\n      sm: \"h-6 w-6 p-1 [&>svg]:h-4 [&>svg]:w-4\",\r\n      lg: \"h-10 w-10 [&>svg]:h-6 [&>svg]:w-6\",\r\n    },\r\n  },\r\n  defaultVariants: {\r\n    variant: \"table\",\r\n    size: \"md\",\r\n  },\r\n});\r\n\r\ninterface IconButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement>, VariantProps<typeof iconButtonVariants> {\r\n  asChild?: boolean;\r\n  loading?: boolean;\r\n}\r\n\r\nconst IconButton = React.forwardRef<HTMLButtonElement, IconButtonProps>(\r\n  ({ asChild, children, className, disabled, loading, variant, size, ...props }, ref) => {\r\n    const Comp = asChild ? Slot : \"button\";\r\n    return (\r\n      <Comp className={cn(iconButtonVariants({ variant, size, className }))} disabled={disabled || loading} ref={ref} {...props}>\r\n        {loading ? <Spinner /> : null}\r\n        <Slottable>{children}</Slottable>\r\n      </Comp>\r\n    );\r\n  },\r\n);\r\n\r\nexport { IconButton, type IconButtonProps };\r\n"],"names":["iconButtonVariants","tv","IconButton","React","asChild","children","className","disabled","loading","variant","size","props","ref","Slot","cn","jsx","Spinner","Slottable"],"mappings":";;;;;;AASA,MAAMA,IAAqBC,EAAG;AAAA,EAC5B,MAAM;AAAA,EACN,UAAU;AAAA,IACR,SAAS;AAAA,MACP,OAAO;AAAA,MACP,SAAS;AAAA,MACT,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,SAAS;AAAA,MACT,SAAS;AAAA,MACT,MAAM;AAAA,IAAA;AAAA,IAER,MAAM;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,IAAA;AAAA,EACN;AAAA,EAEF,iBAAiB;AAAA,IACf,SAAS;AAAA,IACT,MAAM;AAAA,EAAA;AAEV,CAAC,GAOKC,IAAaC,EAAM;AAAA,EACvB,CAAC,EAAE,SAAAC,GAAS,UAAAC,GAAU,WAAAC,GAAW,UAAAC,GAAU,SAAAC,GAAS,SAAAC,GAAS,MAAAC,GAAM,GAAGC,EAAA,GAASC,wBAChER,IAAUS,IAAO,UAE3B,EAAK,WAAWC,EAAGd,EAAmB,EAAE,SAAAS,GAAS,MAAAC,GAAM,WAAAJ,EAAA,CAAW,CAAC,GAAG,UAAUC,KAAYC,GAAS,KAAAI,GAAW,GAAGD,GACjH,UAAA;AAAA,IAAAH,IAAU,gBAAAO,EAACC,KAAQ,IAAK;AAAA,IACzB,gBAAAD,EAACE,KAAW,UAAAZ,EAAA,CAAS;AAAA,EAAA,GACvB;AAGN;"}