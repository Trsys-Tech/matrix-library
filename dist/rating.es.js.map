{"version":3,"file":"rating.es.js","sources":["../src/components/rating/Rating.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React from \"react\";\r\n\r\nimport { cn } from \"../../lib/utils\";\r\nimport { tv, VariantProps } from \"tailwind-variants\";\r\nimport { Star } from \"@trsys-tech/matrix-icons\";\r\n\r\nconst ratingVariants = tv({\r\n  base: \"flex items-center gap-0\",\r\n  variants: {\r\n    variant: {\r\n      default: \"text-yellow-400\",\r\n      primary: \"text-primary\",\r\n      secondary: \"text-secondary\",\r\n      success: \"text-success\",\r\n      danger: \"text-danger\",\r\n      warning: \"text-warning\",\r\n      info: \"text-info\",\r\n    },\r\n    size: {\r\n      sm: \"[&_*_svg]:h-5 [&_*_svg]:w-5\",\r\n      md: \"[&_*_svg]:h-6 [&_*_svg]:w-6\",\r\n      lg: \"[&_*_svg]:h-8 [&_*_svg]:w-8\",\r\n    },\r\n  },\r\n  defaultVariants: {\r\n    variant: \"default\",\r\n    size: \"md\",\r\n  },\r\n});\r\n\r\ninterface RatingProps extends React.HTMLAttributes<HTMLDivElement> {\r\n  precision?: \"half\" | \"full\";\r\n  variant?: VariantProps<typeof ratingVariants>[\"variant\"];\r\n  size?: VariantProps<typeof ratingVariants>[\"size\"];\r\n  readOnly?: boolean;\r\n  value?: number;\r\n  onValueChange?: (value: number) => void;\r\n  children?: React.ReactNode;\r\n  disabled?: boolean;\r\n  max?: number;\r\n  Icon?: React.JSXElementConstructor<React.SVGProps<SVGSVGElement>>;\r\n}\r\n\r\nconst Rating = React.forwardRef<HTMLDivElement, RatingProps>((props, ref) => {\r\n  const {\r\n    precision = \"full\",\r\n    variant,\r\n    size,\r\n    readOnly = false,\r\n    onValueChange,\r\n    value: _value = 0,\r\n    className,\r\n    children,\r\n    max = 5,\r\n    Icon = Star,\r\n    disabled,\r\n    ...restProps\r\n  } = props;\r\n\r\n  const [value, setValue] = React.useState(_value);\r\n  const [hoveredValue, setHoveredValue] = React.useState<number | null>(null);\r\n\r\n  const displayedValue = hoveredValue ?? value;\r\n\r\n  React.useEffect(() => {\r\n    setValue(_value);\r\n  }, [_value]);\r\n\r\n  const handleValueChange = (newValue: number) => {\r\n    if (readOnly) return;\r\n    setValue(newValue);\r\n    onValueChange?.(newValue);\r\n  };\r\n\r\n  const handleHover = (newValue: number | null) => {\r\n    if (readOnly) return;\r\n    setHoveredValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={cn(ratingVariants({ variant, size, className }))}\r\n      role=\"slider\"\r\n      data-value={value}\r\n      aria-valuenow={displayedValue}\r\n      aria-valuemin={0}\r\n      aria-valuemax={max}\r\n      aria-valuetext={`${displayedValue} out of ${max}`}\r\n      {...restProps}\r\n      ref={ref}\r\n    >\r\n      {Array.from({ length: max }).map((_, index) => (\r\n        <RatingItem\r\n          Icon={Icon}\r\n          index={index}\r\n          key={index}\r\n          displayedValue={displayedValue}\r\n          onHover={handleHover}\r\n          onValueChange={handleValueChange}\r\n          precision={precision}\r\n          readOnly={readOnly}\r\n          disabled={disabled}\r\n        />\r\n      ))}\r\n      {children}\r\n    </div>\r\n  );\r\n});\r\n\r\ntype RatingItemProps = {\r\n  Icon: React.JSXElementConstructor<React.SVGProps<SVGSVGElement>>;\r\n  index: number;\r\n  onHover: (value: number | null) => void;\r\n  onValueChange: (value: number) => void;\r\n  displayedValue: number;\r\n  precision: \"half\" | \"full\";\r\n  readOnly: boolean;\r\n  disabled?: boolean;\r\n};\r\n\r\nconst RatingItem = ({ Icon, index, displayedValue, onHover, onValueChange, precision, readOnly, disabled }: RatingItemProps) => {\r\n  if (precision === \"half\") {\r\n    return (\r\n      <div\r\n        className={cn(\r\n          \"relative hover:scale-125 transition-transform px-0.5\",\r\n          readOnly && \"hover:scale-100\",\r\n          disabled && \"hover:scale-100 opacity-70\",\r\n        )}\r\n      >\r\n        <Icon className={cn(\"stroke-gray-500\")} />\r\n        <button\r\n          type=\"button\"\r\n          className={cn(\r\n            \"absolute top-0 w-[calc(50%+2px)] left-0 overflow-hidden h-full\",\r\n            readOnly && \"cursor-default\",\r\n            disabled && \"cursor-default hover:scale-100 opacity-70\",\r\n          )}\r\n          onClick={() => onValueChange(index + 0.5)}\r\n          onMouseEnter={() => onHover(index + 0.5)}\r\n          onMouseLeave={() => onHover(null)}\r\n          disabled={disabled}\r\n          aria-label={`Set rating to ${index + 0.5}`}\r\n        >\r\n          <Icon\r\n            className={cn(\r\n              \"stroke-none absolute left-0.5 top-0 [mask-image:linear-gradient(to_right,_black_50%,_transparent_50%)]\",\r\n              displayedValue >= index + 0.5 && \"stroke-current fill-current\",\r\n            )}\r\n          />\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className={cn(\r\n            \"absolute top-0 w-[calc(50%+2px)] right-0 overflow-hidden h-full\",\r\n            readOnly && \"cursor-default\",\r\n            disabled && \"cursor-default hover:scale-100 opacity-70\",\r\n          )}\r\n          onClick={() => onValueChange(index + 1)}\r\n          onMouseEnter={() => onHover(index + 1)}\r\n          onMouseLeave={() => onHover(null)}\r\n          disabled={disabled}\r\n          aria-label={`Set rating to ${index + 1}`}\r\n        >\r\n          <Icon\r\n            className={cn(\r\n              \"stroke-none absolute right-0.5 top-0 [mask-image:linear-gradient(to_left,_black_50%,_transparent_50%)]\",\r\n              displayedValue >= index + 1 && \"stroke-current fill-current\",\r\n            )}\r\n          />\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      onClick={() => onValueChange(index + 1)}\r\n      onMouseEnter={() => onHover(index + 1)}\r\n      onMouseLeave={() => onHover(null)}\r\n      className={cn(\r\n        \"hover:scale-125 px-0.5 transition-transform\",\r\n        readOnly && \"cursor-default hover:scale-100\",\r\n        disabled && \"cursor-default hover:scale-100 opacity-70\",\r\n      )}\r\n      disabled={disabled}\r\n      aria-label={`Set rating to ${index + 1}`}\r\n    >\r\n      <Icon className={cn(\"stroke-gray-500\", displayedValue >= index + 1 && \"stroke-current fill-current\")} />\r\n    </button>\r\n  );\r\n};\r\n\r\nexport { Rating, type RatingProps };\r\n"],"names":["ratingVariants","tv","Rating","React","props","ref","precision","variant","size","readOnly","onValueChange","_value","className","children","max","Icon","Star","disabled","restProps","value","setValue","hoveredValue","setHoveredValue","displayedValue","handleValueChange","newValue","handleHover","jsxs","cn","_","index","jsx","RatingItem","onHover"],"mappings":"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"}