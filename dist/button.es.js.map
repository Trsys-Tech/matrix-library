{"version":3,"file":"button.es.js","sources":["../src/components/button/Button.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport * as React from \"react\";\r\nimport { Spinner } from \"@trsys-tech/matrix-icons\";\r\nimport { Slot, Slottable } from \"@radix-ui/react-slot\";\r\nimport { tv, type VariantProps } from \"tailwind-variants\";\r\n\r\nimport { cn } from \"../../lib/utils\";\r\n\r\nconst buttonVariants = tv({\r\n  base: \"inline-flex items-center justify-center gap-1 whitespace-nowrap rounded-sm text-xs font-normal transition-colors focus-visible:outline-none disabled:pointer-events-none disabled:bg-muted disabled:text-gray-500\",\r\n  variants: {\r\n    variant: {\r\n      primary:\r\n        \"bg-primary text-primary-foreground hover:bg-primary-600 focus:border-primary focus:ring focus:ring-primary-300 active:bg-primary active:ring active:ring-1 active:ring-primary active:ring-offset-2\",\r\n      outline:\r\n        \"border border-primary text-primary hover:bg-primary-50 focus:bg-primary-50 focus:border-primary-100 focus:ring focus:ring-primary-100 active:bg-primary-50 active:border-primary active:ring-1 active:ring-primary active:ring-offset-2 disabled:border-gray-400\",\r\n      text: \"text-text [&>svg]:text-primary border border-transparent hover:bg-primary-50 focus:ring focus:ring-primary-100 active:ring-1 active:ring-primary disabled:text-text-300 [&>svg]:disabled:text-text-300 disabled:bg-transparent\",\r\n      danger:\r\n        \"bg-danger text-danger-foreground hover:bg-danger-600 focus:ring focus:ring-danger-400 active:bg-danger active:ring-1 active:ring-danger active:ring-offset-2\",\r\n      warning:\r\n        \"bg-warning text-warning-foreground hover:bg-warning-600 focus:ring focus:ring-warning-400 active:bg-warning active:ring-1 active:ring-warning active:ring-offset-2\",\r\n      success:\r\n        \"bg-success text-success-foreground hover:bg-success-600 focus:ring focus:ring-success-400 active:bg-success active:ring-1 active:ring-success active:ring-offset-2\",\r\n      info: \"bg-info text-info-foreground hover:bg-info-600 focus:ring focus:ring-info-400 active:bg-info active:ring-1 active:ring-info active:ring-offset-2\",\r\n      \"primary-on-dark\":\r\n        \"bg-gray-0 text-primary hover:bg-primary-50 focus:bg-gray-0 focus:border-none focus:ring focus:ring-primary-100 active:ring-0 active:bg-gray-0 active:outline active:outline-2 active:outline-gray-0 active:outline-offset-1\",\r\n      \"outline-on-dark\":\r\n        \"border border-gray-0 text-gray-0 hover:bg-primary-100 hover:text-primary focus:text-primary focus:bg-primary-50 focus:border-primary-50 focus:ring focus:ring-primary-100 active:text-gray-0 active:bg-transparent active:border-gray-0 active:ring-0 active:outline active:outline-1 active:outline-gray-0 active:outline-offset-2\",\r\n      \"text-on-dark\":\r\n        \"text-gray-0 hover:bg-primary-50 hover:text-text [&>svg]:hover:text-primary focus:text-text focus:bg-transparent focus:border-none [&>svg]:focus:text-primary-100 focus:ring focus:ring-primary-100 active:ring-0 active:bg-primary-50 active:text-text [&>svg]:active:text-primary active:outline active:outline-1 active:outline-gray-0 active:outline-offset-1\",\r\n    },\r\n    size: {\r\n      md: \"h-8 p-2 [&>svg]:h-5 [&>svg]:w-5\",\r\n      sm: \"h-6 p-1 [&>svg]:h-4 [&>svg]:w-4\",\r\n      lg: \"h-10 rounded-md p-4 text-sm [&>svg]:h-6 [&>svg]:w-6\",\r\n    },\r\n  },\r\n  defaultVariants: {\r\n    variant: \"primary\",\r\n    size: \"md\",\r\n  },\r\n});\r\n\r\nexport type ButtonVariant = VariantProps<typeof buttonVariants>[\"variant\"];\r\nexport type ButtonSize = VariantProps<typeof buttonVariants>[\"size\"];\r\n\r\ninterface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\r\n  asChild?: boolean;\r\n  loading?: boolean;\r\n  startIcon?: React.ReactNode;\r\n  endIcon?: React.ReactNode;\r\n  variant?: ButtonVariant;\r\n  size?: ButtonSize;\r\n}\r\n\r\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\r\n  ({ className, variant, size, asChild = false, children, loading, disabled, startIcon, endIcon, ...props }, ref) => {\r\n    const Comp = asChild ? Slot : \"button\";\r\n    return (\r\n      <Comp className={cn(buttonVariants({ variant, size, className }))} ref={ref} disabled={disabled || loading} {...props}>\r\n        {loading ? <Spinner /> : null}\r\n        {startIcon}\r\n        <Slottable>{children}</Slottable>\r\n        {endIcon}\r\n      </Comp>\r\n    );\r\n  },\r\n);\r\nButton.displayName = \"Button\";\r\n\r\nexport { Button, type ButtonProps, buttonVariants };\r\n"],"names":["buttonVariants","tv","Button","React","className","variant","size","asChild","children","loading","disabled","startIcon","endIcon","props","ref","Slot","cn","jsx","Spinner","Slottable"],"mappings":";;;;;;AASA,MAAMA,IAAiBC,EAAG;AAAA,EACxB,MAAM;AAAA,EACN,UAAU;AAAA,IACR,SAAS;AAAA,MACP,SACE;AAAA,MACF,SACE;AAAA,MACF,MAAM;AAAA,MACN,QACE;AAAA,MACF,SACE;AAAA,MACF,SACE;AAAA,MACF,MAAM;AAAA,MACN,mBACE;AAAA,MACF,mBACE;AAAA,MACF,gBACE;AAAA,IAAA;AAAA,IAEJ,MAAM;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,MACJ,IAAI;AAAA,IAAA;AAAA,EACN;AAAA,EAEF,iBAAiB;AAAA,IACf,SAAS;AAAA,IACT,MAAM;AAAA,EAAA;AAEV,CAAC,GAcKC,IAASC,EAAM;AAAA,EACnB,CAAC,EAAE,WAAAC,GAAW,SAAAC,GAAS,MAAAC,GAAM,SAAAC,IAAU,IAAO,UAAAC,GAAU,SAAAC,GAAS,UAAAC,GAAU,WAAAC,GAAW,SAAAC,GAAS,GAAGC,EAAA,GAASC,wBAC5FP,IAAUQ,IAAO,UAE3B,EAAK,WAAWC,EAAGhB,EAAe,EAAE,SAAAK,GAAS,MAAAC,GAAM,WAAAF,EAAA,CAAW,CAAC,GAAG,KAAAU,GAAU,UAAUJ,KAAYD,GAAU,GAAGI,GAC7G,UAAA;AAAA,IAAAJ,IAAU,gBAAAQ,EAACC,KAAQ,IAAK;AAAA,IACxBP;AAAA,IACD,gBAAAM,EAACE,KAAW,UAAAX,GAAS;AAAA,IACpBI;AAAA,EAAA,GACH;AAGN;AACAV,EAAO,cAAc;"}