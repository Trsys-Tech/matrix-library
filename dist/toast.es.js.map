{"version":3,"file":"toast.es.js","sources":["../src/components/toast/Toast.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useEffect } from \"react\";\r\nimport { Toast as Root, ToastClose, ToastProvider, ToastTitle, ToastViewport } from \"./toast-components\";\r\n\r\nimport { useToasts, toastParams } from \"./use-toast\";\r\nimport { InfoCircleIcon } from \"../Icons/InfoCircleIcon\";\r\nimport { SuccessCircleIcon } from \"../Icons/SuccessCircleIcon\";\r\nimport { WarningCircleIcon } from \"../Icons/WarningCircleIcon\";\r\nimport { DangerCircleIcon } from \"../Icons/DangerCircleIcon\";\r\nimport { ToastProviderProps, ToastViewportProps } from \"@radix-ui/react-toast\";\r\n\r\ntype ToastProps = {\r\n  limit?: number;\r\n  duration?: number;\r\n  slotProps?: {\r\n    providerProps?: ToastProviderProps;\r\n    viewportProps?: ToastViewportProps;\r\n    itemProps?: React.ComponentProps<typeof Root>;\r\n    closeProps?: React.ComponentProps<typeof ToastClose>;\r\n    titleProps?: React.ComponentProps<typeof ToastTitle>;\r\n  };\r\n};\r\n\r\nfunction Toast({ limit = 3, duration = 5000, slotProps }: ToastProps) {\r\n  const { toasts, removeToast } = useToasts();\r\n\r\n  useEffect(() => {\r\n    if (limit !== undefined) {\r\n      toastParams.limit = limit;\r\n    }\r\n  }, [limit]);\r\n\r\n  return (\r\n    <ToastProvider duration={duration} {...(slotProps?.providerProps ?? {})}>\r\n      {Array.from(toasts).map(([key, { message, variant }]) => {\r\n        return (\r\n          <Root\r\n            key={key}\r\n            variant={variant}\r\n            onOpenChange={open => {\r\n              if (!open) {\r\n                setTimeout(() => removeToast(key), 100); // let the animation finish then remove the toast\r\n              }\r\n            }}\r\n            {...(slotProps?.itemProps ?? {})}\r\n          >\r\n            <div className=\"flex gap-2 items-center\">\r\n              <div>\r\n                {variant === \"danger\" && <DangerCircleIcon className=\"w-5 h-5\" />}\r\n                {variant === \"success\" && <SuccessCircleIcon className=\"w-5 h-5\" />}\r\n                {variant === \"info\" && <InfoCircleIcon className=\"w-5 h-5\" />}\r\n                {variant === \"warning\" && <WarningCircleIcon className=\"w-5 h-5\" />}\r\n              </div>\r\n              {message && <ToastTitle {...(slotProps?.titleProps ?? {})}>{message}</ToastTitle>}\r\n            </div>\r\n            <ToastClose {...(slotProps?.closeProps ?? {})} />\r\n            {/* {action} */}\r\n          </Root>\r\n        );\r\n      })}\r\n      <ToastViewport />\r\n    </ToastProvider>\r\n  );\r\n}\r\nToast.displayName = \"Toast\";\r\n\r\nexport { Toast, type ToastProps };\r\n"],"names":["Toast","limit","duration","slotProps","toasts","removeToast","useToasts","useEffect","toastParams","ToastProvider","key","message","variant","jsxs","Root","open","jsx","DangerCircleIcon","SuccessCircleIcon","InfoCircleIcon","WarningCircleIcon","ToastTitle","ToastClose","ToastViewport"],"mappings":";;;;;;;;AAwBA,SAASA,EAAM,EAAE,OAAAC,IAAQ,GAAG,UAAAC,IAAW,KAAM,WAAAC,KAAyB;AACpE,QAAM,EAAE,QAAAC,GAAQ,aAAAC,EAAA,IAAgBC,EAAA;AAEhC,SAAAC,EAAU,MAAM;AACd,IAAIN,MAAU,WACZO,EAAY,QAAQP;AAAA,EAExB,GAAG,CAACA,CAAK,CAAC,qBAGPQ,GAAA,EAAc,UAAAP,GAAqB,GAAIC,GAAW,iBAAiB,CAAA,GACjE,UAAA;AAAA,IAAA,MAAM,KAAKC,CAAM,EAAE,IAAI,CAAC,CAACM,GAAK,EAAE,SAAAC,GAAS,SAAAC,EAAA,CAAS,MAE/C,gBAAAC;AAAA,MAACC;AAAAA,MAAA;AAAA,QAEC,SAAAF;AAAA,QACA,cAAc,CAAAG,MAAQ;AACpB,UAAKA,KACH,WAAW,MAAMV,EAAYK,CAAG,GAAG,GAAG;AAAA,QAE1C;AAAA,QACC,GAAIP,GAAW,aAAa,CAAA;AAAA,QAE7B,UAAA;AAAA,UAAA,gBAAAU,EAAC,OAAA,EAAI,WAAU,2BACb,UAAA;AAAA,YAAA,gBAAAA,EAAC,OAAA,EACE,UAAA;AAAA,cAAAD,MAAY,YAAY,gBAAAI,EAACC,GAAA,EAAiB,WAAU,WAAU;AAAA,cAC9DL,MAAY,aAAa,gBAAAI,EAACE,GAAA,EAAkB,WAAU,WAAU;AAAA,cAChEN,MAAY,UAAU,gBAAAI,EAACG,GAAA,EAAe,WAAU,WAAU;AAAA,cAC1DP,MAAY,aAAa,gBAAAI,EAACI,GAAA,EAAkB,WAAU,UAAA,CAAU;AAAA,YAAA,GACnE;AAAA,YACCT,uBAAYU,GAAA,EAAY,GAAIlB,GAAW,cAAc,CAAA,GAAM,UAAAQ,EAAA,CAAQ;AAAA,UAAA,GACtE;AAAA,4BACCW,GAAA,EAAY,GAAInB,GAAW,cAAc,CAAA,EAAC,CAAI;AAAA,QAAA;AAAA,MAAA;AAAA,MAlB1CO;AAAA,IAAA,CAsBV;AAAA,sBACAa,GAAA,CAAA,CAAc;AAAA,EAAA,GACjB;AAEJ;AACAvB,EAAM,cAAc;"}